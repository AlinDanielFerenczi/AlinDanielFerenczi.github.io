{"version":3,"sources":["components/common/Header.tsx","components/themes/base.ts","components/themes/lightTheme.ts","components/themes/darkTheme.ts","components/themes/ThemeProvider.tsx","components/common/Footer.tsx","components/views/Home.tsx","components/common/Chatbot.tsx","components/common/ComplexGrid.tsx","components/views/Dashboard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Header","classes","className","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","themeMap","lightTheme","createMuiTheme","type","background","default","primary","main","secondary","darkTheme","ThemeContext","React","createContext","themeName","ThemeProvider","props","curThemeName","localStorage","getItem","useState","_setThemeName","themeCreator","Provider","value","setItem","responsiveFontSizes","CssBaseline","children","stickToBottom","bottom","button","Footer","setThemeName","useContext","isNight","setNight","Grid","container","item","Button","onClick","Home","id","src","alt","Component","zIndex","right","Chatbot","Dialog","open","isAuthenticated","DialogTitle","List","ListItem","signIn","ListItemAvatar","Avatar","style","ListItemText","paper","margin","maxWidth","image","img","maxHeight","ComplexGrid","Paper","ButtonBase","xs","sm","direction","gutterBottom","cursor","Dashboard","justify","minHeight","fill","chartType","loader","data","options","chartArea","hAxis","minValue","vAxis","legendToggle","titleTextStyle","bubble","textStyle","fontSize","label","role","intervals","legend","alert","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","a","googleProvider","auth","GoogleAuthProvider","signInWithPopup","console","error","App","user","messages","UserData","setUserData","useEffect","onAuthStateChanged","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.fe0571aa.chunk.js","sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { createStyles, fade, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: '12ch',\r\n        '&:focus': {\r\n          width: '20ch',\r\n        },\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\nfunction Header() {\r\n    const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Alin-Daniel Ferenczi\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Header;","import { Theme } from \"@material-ui/core\";\r\nimport { lightTheme } from \"./lightTheme\";\r\nimport { darkTheme } from \"./darkTheme\";\r\n\r\nexport function themeCreator(theme: string): Theme {\r\n  return themeMap[theme];\r\n}\r\n\r\nconst themeMap: { [key: string]: Theme } = {\r\n  lightTheme,\r\n  darkTheme\r\n};","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport const lightTheme = createMuiTheme({\r\n  palette: {\r\n    type: 'light',\r\n    background: {\r\n      default: \"#fff\"\r\n    },\r\n    primary: {\r\n      main: '#000'\r\n    },\r\n    secondary: {\r\n      main: '#0000FF'\r\n    }\r\n  }\r\n});","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const darkTheme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    background: {\r\n      default: \"#000\"\r\n    },\r\n    primary: {\r\n      main: \"#fff\"\r\n    },\r\n    secondary: {\r\n      main: '#9932CC'\r\n    }\r\n  }\r\n});","import React, { useState } from 'react';\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { MuiThemeProvider, responsiveFontSizes } from \"@material-ui/core\";\r\nimport { themeCreator } from './base';\r\n\r\nexport const ThemeContext = React.createContext((themeName: string): void => {});\r\n\r\nconst ThemeProvider: React.FC = (props) => {\r\n     // Read current theme from localStorage or maybe from an api\r\n     const curThemeName = localStorage.getItem(\"appTheme\") || \"lightTheme\";\r\n\r\n     // State to hold the selected theme name\r\n     const [themeName, _setThemeName] = useState(curThemeName);\r\n \r\n     // Get the theme object by theme name\r\n     const theme = themeCreator(themeName);\r\n \r\n     const setThemeName = (themeName: string): void => {\r\n         localStorage.setItem(\"appTheme\", themeName);\r\n         _setThemeName(themeName);\r\n     }\r\n \r\n\r\n    return (\r\n        <ThemeContext.Provider value={setThemeName}>\r\n          <MuiThemeProvider theme={responsiveFontSizes(theme)}><CssBaseline />{props.children}</MuiThemeProvider>\r\n        </ThemeContext.Provider>\r\n      );\r\n}\r\n\r\nexport default ThemeProvider;","import React, { useContext, useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { ThemeContext } from '../themes/ThemeProvider';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        stickToBottom: {\r\n            flexGrow: 1,\r\n            width: '100%',\r\n            position: 'fixed',\r\n            bottom: '2em',\r\n            height: '3em'\r\n        },\r\n        button: {\r\n            height: '3em'\r\n        }\r\n    }),\r\n);\r\n\r\nconst Footer = () => {\r\n    const classes = useStyles();\r\n    const setThemeName = useContext(ThemeContext);\r\n    const [isNight, setNight] = useState(localStorage.getItem(\"appTheme\") === \"lightTheme\" ? false : true);\r\n    const [value, setValue] = React.useState('recents');\r\n\r\n    return (\r\n        <div className={classes.stickToBottom}>\r\n            <Grid container>\r\n                <Grid item>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        onClick={() => {\r\n                                setThemeName(isNight ? \"lightTheme\" : \"darkTheme\");\r\n                                setNight(!isNight);\r\n                            }\r\n                        }\r\n                    >\r\n                        Set {isNight ? \"Light\" : \"Dark\"} Theme\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport '../../css/logo.css';\r\n\r\nexport default class Home extends Component {\r\n    static propTypes = {\r\n        prop: PropTypes\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"logo-container\">\r\n                <img src={process.env.PUBLIC_URL+\"/logo.png\"} className=\"App-logo\" alt=\"logo\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button } from '@material-ui/core';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            position: 'absolute',\r\n            zIndex: 1,\r\n        },\r\n        button: {\r\n            position: 'fixed',\r\n            height: '3em',\r\n            padding: '6px 16px',\r\n            bottom: '2em',\r\n            right: 0,\r\n        }\r\n    }),\r\n);\r\n\r\nconst Chatbot= (props: ChatbotProps) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.button}>Open Chatbot</Button>\r\n            <Dialog open={!props.isAuthenticated}>\r\n                <DialogTitle id=\"simple-dialog-title\">Sign in</DialogTitle>\r\n                <div>\r\n                    <List>\r\n                        <ListItem button onClick={() => props.signIn()}>\r\n                            <ListItemAvatar>\r\n                                <Avatar style={{ backgroundColor: \"#eee\" }}>\r\n                                    <img\r\n                                        src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                                        height=\"30\"\r\n                                        alt=\"G\"\r\n                                    />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary=\"Sign in with Google\" />\r\n                        </ListItem>\r\n                    </List>\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chatbot\r\n\r\ntype ChatbotProps = {\r\n    isAuthenticated: boolean,\r\n    signIn: () => void\r\n}","import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      margin: 'auto',\r\n      maxWidth: 500,\r\n    },\r\n    image: {\r\n      width: 128,\r\n      height: 128,\r\n    },\r\n    img: {\r\n      margin: 'auto',\r\n      display: 'block',\r\n      maxWidth: '100%',\r\n      maxHeight: '100%',\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function ComplexGrid() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <ButtonBase className={classes.image}>\r\n              <img className={classes.img} alt=\"complex\" src={process.env.PUBLIC_URL+\"/logo.png\"} />\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item xs={12} sm container>\r\n            <Grid item xs container direction=\"column\" spacing={2}>\r\n              <Grid item xs>\r\n                <Typography gutterBottom variant=\"subtitle1\">\r\n                  Standard license\r\n                </Typography>\r\n                <Typography variant=\"body2\" gutterBottom>\r\n                  Full resolution 1920x1080 • JPEG\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  ID: 1030114\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"body2\" style={{ cursor: 'pointer' }}>\r\n                  Remove\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"subtitle1\">$19.00</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ComplexGrid from '../common/ComplexGrid';\r\nimport { Button } from '@material-ui/core';\r\nimport Chart from \"react-google-charts\";\r\n\r\nfunction Dashboard() {\r\n\r\n  return (\r\n    // A react-chart hyper-responsively and continuusly fills the available\r\n    // space of its parent element automatically\r\n    <Grid\r\n      container\r\n      spacing={1}\r\n      direction=\"row\"\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      style={{ minHeight: '100vh', width: '100%' }}\r\n    >\r\n      <Grid item xs>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs>\r\n              <div style={{ display: 'flex', maxWidth: 900 }}>\r\n                <Chart\r\n                  style={{ fill: \"#123456\" }}\r\n                  width={400}\r\n                  height={300}\r\n                  chartType=\"ColumnChart\"\r\n                  loader={<div>Loading Chart</div>}\r\n                  data={[\r\n                    ['City', '2010 Population', '2000 Population'],\r\n                    ['New York City, NY', 8175000, 8008000],\r\n                    ['Los Angeles, CA', 3792000, 3694000],\r\n                    ['Chicago, IL', 2695000, 2896000],\r\n                    ['Houston, TX', 2099000, 1953000],\r\n                    ['Philadelphia, PA', 1526000, 1517000],\r\n                  ]}\r\n                  options={{\r\n                    title: 'Population of Largest U.S. Cities',\r\n                    chartArea: { width: '30%' },\r\n                    hAxis: {\r\n                      title: 'Total Population',\r\n                      minValue: 0,\r\n                    },\r\n                    vAxis: {\r\n                      title: 'City',\r\n                    },\r\n                  }}\r\n                  legendToggle\r\n                />\r\n                <Chart\r\n                  width={400}\r\n                  height={'300px'}\r\n                  chartType=\"AreaChart\"\r\n                  loader={<div>Loading Chart</div>}\r\n                  data={[\r\n                    ['Year', 'Sales', 'Expenses'],\r\n                    ['2013', 1000, 400],\r\n                    ['2014', 1170, 460],\r\n                    ['2015', 660, 1120],\r\n                    ['2016', 1030, 540],\r\n                  ]}\r\n                  options={{\r\n                    title: 'Company Performance',\r\n                    hAxis: { title: 'Year', titleTextStyle: { color: '#333' } },\r\n                    vAxis: { minValue: 0 },\r\n                    // For the legend to fit, we make the chart area smaller\r\n                    chartArea: { width: '50%', height: '70%' },\r\n                    // lineWidth: 25\r\n                  }}\r\n                />\r\n              </div>\r\n              <div style={{ display: 'flex' }}>\r\n                <Chart\r\n                  width={400}\r\n                  height={'300px'}\r\n                  chartType=\"BubbleChart\"\r\n                  loader={<div>Loading Chart</div>}\r\n                  data={[\r\n                    ['ID', 'Life Expectancy', 'Fertility Rate', 'Region', 'Population'],\r\n                    ['CAN', 80.66, 1.67, 'North America', 33739900],\r\n                    ['DEU', 79.84, 1.36, 'Europe', 81902307],\r\n                    ['DNK', 78.6, 1.84, 'Europe', 5523095],\r\n                    ['EGY', 72.73, 2.78, 'Middle East', 79716203],\r\n                    ['GBR', 80.05, 2, 'Europe', 61801570],\r\n                    ['IRN', 72.49, 1.7, 'Middle East', 73137148],\r\n                    ['IRQ', 68.09, 4.77, 'Middle East', 31090763],\r\n                    ['ISR', 81.55, 2.96, 'Middle East', 7485600],\r\n                    ['RUS', 68.6, 1.54, 'Europe', 141850000],\r\n                    ['USA', 78.09, 2.05, 'North America', 307007000],\r\n                  ]}\r\n                  options={{\r\n                    title:\r\n                      'Correlation between life expectancy, fertility rate ' +\r\n                      'and population of some world countries (2010)',\r\n                    hAxis: { title: 'Life Expectancy' },\r\n                    vAxis: { title: 'Fertility Rate' },\r\n                    bubble: { textStyle: { fontSize: 11 } },\r\n                  }}\r\n                />\r\n                <Chart\r\n                  width={400}\r\n                  height={300}\r\n                  chartType=\"LineChart\"\r\n                  loader={<div>Loading Chart</div>}\r\n                  data={[\r\n                    [\r\n                      { type: 'number', label: 'x' },\r\n                      { type: 'number', label: 'values' },\r\n                      { id: 'i0', type: 'number', role: 'interval' },\r\n                      { id: 'i1', type: 'number', role: 'interval' },\r\n                      { id: 'i2', type: 'number', role: 'interval' },\r\n                      { id: 'i2', type: 'number', role: 'interval' },\r\n                      { id: 'i2', type: 'number', role: 'interval' },\r\n                      { id: 'i2', type: 'number', role: 'interval' },\r\n                    ],\r\n                    [1, 100, 90, 110, 85, 96, 104, 120],\r\n                    [2, 120, 95, 130, 90, 113, 124, 140],\r\n                    [3, 130, 105, 140, 100, 117, 133, 139],\r\n                    [4, 90, 85, 95, 85, 88, 92, 95],\r\n                    [5, 70, 74, 63, 67, 69, 70, 72],\r\n                    [6, 30, 39, 22, 21, 28, 34, 40],\r\n                    [7, 80, 77, 83, 70, 77, 85, 90],\r\n                    [8, 100, 90, 110, 85, 95, 102, 110],\r\n                  ]}\r\n                  options={{\r\n                    intervals: { style: 'sticks' },\r\n                    legend: 'none',\r\n                  }}\r\n                />\r\n              </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs>\r\n      <Grid container spacing={3}>\r\n      <Grid item xs>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs>\r\n            <ComplexGrid />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <ComplexGrid />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs>\r\n            <ComplexGrid />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <ComplexGrid />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <ComplexGrid />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs>\r\n            <ComplexGrid />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <ComplexGrid />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs>\r\n\r\n        </Grid>\r\n        <Grid container spacing={1}>\r\n          <Grid item >\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                alert(\"Previous page not available\");\r\n              }\r\n              }\r\n            >\r\n              Prev\r\n          </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                alert(\"Next page not available\");\r\n              }\r\n              }\r\n            >\r\n              Next\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n    </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Dashboard;","import React, { useState, useEffect } from 'react';\nimport Header from './components/common/Header';\nimport Footer from './components/common/Footer';\nimport Home from './components/views/Home';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Chatbot from './components/common/Chatbot';\nimport firebase from \"firebase\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Dashboard from './components/views/Dashboard';\n\nexport interface IUserData {\n  messages: [],\n  user: {},\n  isAuthenticated: boolean,\n}\n\nconst config = {\n  apiKey: \"AIzaSyAWSbmLVn4fcW2bCkebr5SE3kOTSb0CtKI\",\n  authDomain: \"personalwebsite-51279.firebaseapp.com\",\n  databaseURL: \"https://personalwebsite-51279.firebaseio.com\",\n  projectId: \"personalwebsite-51279\",\n  storageBucket: \"personalwebsite-51279.appspot.com\",\n  messagingSenderId: \"837623330342\",\n  appId: \"1:837623330342:web:85063ba181ccc447a058e7\",\n  measurementId: \"G-CLY61BPE6B\"\n};\n\nfirebase.initializeApp(config);\nfirebase.analytics();\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      width: '100%'\n    }\n  }),\n);\n\n\nconst signIn = async() => {\n  const googleProvider = new firebase.auth.GoogleAuthProvider();\n  try {\n    await firebase.auth().signInWithPopup(googleProvider);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction App() {\n  const classes = useStyles();\n  const [UserData, setUserData] = useState<IUserData>({isAuthenticated: false, user: {}, messages: []});\n\n\n  \n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        setUserData({ isAuthenticated: true, user, messages: [] });\n      } else {\n        setUserData({ isAuthenticated: false, user: {}, messages: [] });\n      }\n    });\n  });\n\n  return (\n    <div className={classes.root}>\n      <Header />\n      <Router>\n      <div>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n      <Footer />\n      <Chatbot isAuthenticated={UserData.isAuthenticated} signIn={signIn}/>\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ThemeProvider from './components/themes/ThemeProvider';\n\nReactDOM.render(\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}